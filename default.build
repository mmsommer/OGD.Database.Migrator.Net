<?xml version="1.0" encoding="UTF-8" ?>
<project name="migrator" default="build" xmlns="http://nant.sf.net/release/0.85/nant.xsd">
	<property name="dir.bin" value="build" />
	<property name="dir.lib" value="lib" />
	<property name="dir.results" value="results"/>
	<property name="dir.zip" value="${dir.bin}/zip" />

    <property name="dir.tools.ncover" value="${dir.lib}/NCover" />
    <property name="dir.tools.nunit" value="${dir.lib}/NUnit" />
	<property name="dir.lib.postgre" value="${dir.lib}/Npgsql/${framework::get-target-framework()}" />

	<property name="defines" value="DOTNET2" if="${framework::get-target-framework() == 'net-2.0' or framework::get-target-framework() == 'net-3.5'}" />
	<property name="defines" value="MONO2" if="${framework::get-target-framework() == 'mono-2.0'}" />
	
	<property name="debug" value="true" />
    <property name="test.project.name" value="Migrator.Tests"/>

    <loadtasks assembly="${dir.tools.ncover}/Explorer/NCoverExplorer.NAntTasks.dll" />

    <!--
    Once we setup to build from sln, we can specify build config to target
    which is ideal to output release assemblies over debug. the debug, release
    targets are not used at the moment
    
	<target name="debug">
		<property name="build.config" value="Debug" />
		<call target="build" />
	</target>
	<target name="release">
		<property name="build.config" value="Release" />
		<call target="build.common" />
	</target>
    -->
    
	<target name="build" description="Builds the app" depends="prepare">
        <csc target="library" output="${dir.bin}/Migrator.Framework.dll" define="${defines}" debug="${debug}">
            <sources>
				<include name="src/config/AssemblyInfo.cs" />
                <include name="src/framework/**/*.cs" />
            </sources>
            <references>
                <include name="System.dll" />
                <include name="System.Data.dll" />
            </references>
        </csc>
        <csc target="library" output="${dir.bin}/Migrator.Providers.dll" define="${defines}" debug="${debug}">
            <sources>
				<include name="src/config/AssemblyInfo.cs" />
                <include name="src/app/provider/**/*.cs" />
            </sources>
            <references>
                <include name="System.dll" />
                <include name="System.Data.dll" />
				<include name="Mono.Data.Sqlite.dll" if="${framework::get-target-framework() == 'mono-2.0'}"/>
				<include name="${dir.bin}/System.Data.SQLite.DLL" if="${framework::get-target-framework() == 'net-2.0' or framework::get-target-framework() == 'net-3.5'}"/>
                <include name="${dir.bin}/Migrator.Framework.dll" />
                <include name="${dir.bin}/MySql.Data.dll" />
                <include name="${dir.bin}/Npgsql.dll" />
                <include name="${dir.lib}/Oracle.DataAccess.dll" />
            </references>
        </csc>
        <csc target="library" output="${dir.bin}/Migrator.dll" define="${defines}" debug="${debug}">
            <sources>
                <include name="config/AssemblyInfo.cs" />
                <include name="src/core/**/*.cs" />
                <exclude name="src/core/Providers/ProviderTemplate/**" />
            </sources>
            <references>
                <include name="System.dll" />
                <include name="System.Data.dll" />
                <include name="System.Configuration.dll" />
                <include name="${dir.bin}/Migrator.Framework.dll" />
            </references>
		</csc>
		<csc target="library" output="${dir.bin}/Migrator.NAnt.dll" define="${defines}" debug="${debug}">
			<sources>
			    <include name="src/config/AssemblyInfo.cs" />
				<include name="src/nant/**/*.cs" />
			</sources>
			<references>
				<include name="System.dll" />
				<include name="${dir.bin}/NAnt.Core.dll" />
                <include name="${dir.bin}/Migrator.Framework.dll" />
				<include name="${dir.bin}/Migrator.dll" />
		  </references>
		</csc>
        <csc target="library" output="${dir.bin}/Migrator.MSBuild.dll" define="${defines}" debug="${debug}" if="${framework::get-target-framework() == 'net-2.0'}">
			<sources>
			    <include name="src/config/AssemblyInfo.cs" />
				<include name="src/msbuild/**/*.cs" />
			</sources>
			<references>
                <include name="System.dll" />
                <include name="Microsoft.Build.Framework.dll" />
                <include name="Microsoft.Build.Utilities.dll" />
                <include name="${dir.bin}/Migrator.Framework.dll" />
                <include name="${dir.bin}/Migrator.dll" />
            </references>
        </csc>
        <csc target="exe" output="${dir.bin}/Migrator.Console.exe" define="${defines}" debug="${debug}">
            <sources>
                <include name="src/config/AssemblyInfo.cs" />
                <include name="src/console/**/*.cs" />
            </sources>
            <references>
                <include name="System.dll" />
                <include name="${dir.bin}/Migrator.Framework.dll" />
                <include name="${dir.bin}/Migrator.dll" />
			</references>
		</csc>
	</target>
	
	<target name="rebuild" description="Rebuilds the app from scratch" depends="clean build" />
	
	<target name="build.tests" description="Builds the tests" depends="build, prepare.tests">
		<copy file="config/app.config" tofile="${dir.bin}/${test.project.name}.dll.config" />
		<csc target="library" output="${dir.bin}/${test.project.name}.dll" define="${defines}" debug="${debug}">
			<sources basedir="test">
				<include name="**/*.cs" />
			</sources>
			<references>
				<include name="System.dll" />
				<include name="System.Data.dll" />
				<include name="System.Configuration.dll" />
                <include name="${dir.bin}/Migrator.Framework.dll" />
                <include name="${dir.bin}/Migrator.dll" />
                <include name="${dir.bin}/Migrator.Providers.dll" />
				<include name="${dir.tools.nunit}/nunit.mocks.dll" />
				<include name="${dir.tools.nunit}/nunit.framework.dll" />
			</references>
		</csc>
	</target>
	
	<target name="prepare">
		<mkdir dir="${dir.bin}" />
		<copy file="src/msbuild/Migrator.Targets" todir="${dir.bin}" />
		<copy todir="${dir.bin}" flatten="true">
			<fileset>
				<include name="${dir.lib}/NAnt.Core.dll" />
				<include name="${dir.lib}/log4net.dll" />
				<include name="${dir.lib}/MySql.Data.dll" />
				<include name="${dir.lib}/System.Data.SQLite.DLL" />
				<include name="${dir.lib.postgre}/Npgsql.dll" />
				<include name="${dir.lib.postgre}/Mono.Security.dll" />
				<include name="${dir.lib}/Oracle.DataAccess.dll" />
			</fileset>
		</copy>
	</target>
	
	<target name="prepare.tests">
		<mkdir dir="${dir.bin}" />
        <mkdir dir="${dir.results}"/>
		<copy todir="${dir.bin}" flatten="true">
			<fileset>
				<include name="${dir.tools.nunit}/nunit.mocks.dll" />
				<include name="${dir.tools.nunit}/nunit.framework.dll" />
			</fileset>
		</copy>
	</target>
	
	<target name="clean" description="Sweep it yeah!">
        <delete dir="${dir.bin}"/>
        <delete dir="${dir.results}"/>
	</target>
	
	<target name="test" description="Run tests" depends="build.tests">
		<nunit2> 
			<formatter type="Plain" />
			<test
				assemblyname="${dir.bin}/Migrator.Tests.dll"
				appconfig="src/config/app.config">
                <!-- FIXME: Figure out a way to externalize this so different people can make different choices -->
				<categories>
					<!--
					<exclude name="SQLite" />
					<exclude name="MySql" />
					<exclude name="Postgre" />
                    <exclude name="SqlServer" />
					-->
                    <exclude name="Oracle" />
				</categories>
			</test>
		</nunit2>	
	</target>

    <target name="test.coverage" description="Run the tests with code coverage. Only works on Windows/.NET" depends="build.tests">

        <property name="exclude" value="Oracle" overwrite="false" />

        <ncover program="${dir.tools.ncover}/NCover.Console.exe"
                commandLineExe="${dir.tools.nunit}/nunit-console.exe"
                commandLineArgs="${dir.bin}/${test.project.name}.dll /exclude=${exclude} /labels /nologo /noshadow"
                coverageFile="${dir.results}/coverage.xml"
                logFile="${dir.results}/coverage.log">
            <assemblies basedir="${dir.bin}">
                <include name="Migrator.*.dll" />
                <include name="Migrator.dll" />
                <exclude name="*.Tests.dll" />
            </assemblies>
        </ncover>

        <ncoverexplorer program="${dir.tools.ncover}/Explorer/NCoverExplorer.Console.exe"
                projectName="Migrator"
                outputDir="${dir.results}"
                satisfactoryCoverage="80"
                reportType="ModuleClassFunctionSummary"
                htmlReportName="CoverageSummary.html"
                showExcluded="True">
            <fileset>
                <include name="${dir.results}/coverage.xml" />
            </fileset>
        </ncoverexplorer>
    </target>
    
    <target name="zip" description="Creates a zip file of the entire project including examples, source and docs" depends="build">
        <mkdir dir="${dir.zip}" />
        <zip zipfile="${dir.zip}/migrator.zip">
            <fileset basedir="${dir.bin}">
                <include name="**/*" />
            </fileset>
            <fileset>
                <include name="doc/**/*" />
            </fileset>
        </zip>
    </target>
  
</project>